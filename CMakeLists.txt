CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(SMPI)
INCLUDE_DIRECTORIES(include)
SET(CMAKE_C_COMPILER "/opt/gcc-7.3.0/bin/gcc")
SET(CMAKE_CXX_COMPILER "/opt/gcc-7.3.0/bin/g++")
SET(CMAKE_BUILD_TYPE RELEASE)
SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -O0 -Wall -g -ggdb")
SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -O3 -Wall")
SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/libs)
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)

find_package(OpenMP)
if (OPENMP_FOUND OR OpenMP_CXX_FOUND) 
    set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
    set (CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
endif()

option(BREAKDOWN_ANALYSIS OFF)
IF (BREAKDOWN_ANALYSIS)
    ADD_DEFINITIONS(-DBREAKDOWN_ANALYSIS)
ENDIF()

ADD_COMPILE_OPTIONS(-std=c++11)

SET(CMAKE_MACOSX_RPATH 0)
ADD_SUBDIRECTORY(src)

MESSAGE("CMAKE_C_FLAGS = " ${CMAKE_C_FLAGS})
MESSAGE("CMAKE_CXX_FLAGS = " ${CMAKE_CXX_FLAGS})
MESSAGE("PROJECT BINARY DIR = " ${PROJECT_BINARY_DIR})
MESSAGE("CMAKE_BUILD_TYPE = " ${CMAKE_BUILD_TYPE})
MESSAGE("CMAKE_INSTALL_PREFIX = " ${CMAKE_INSTALL_PREFIX})
MESSAGE("BREAKDOWN_ANALYSIS = " ${BREAKDOWN_ANALYSIS})
